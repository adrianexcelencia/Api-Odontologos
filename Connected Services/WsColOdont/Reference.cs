//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WsColOdont
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ExcelenciaDigital.net/", ConfigurationName="WsColOdont.ServiceSoap")]
    public interface ServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Nomenclador", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> NomencladorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ConsultaAutorizados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> ConsultaAutorizadosAsync(string DniAfi, string CodObra, string Matri, string pCoseguro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/TotalAutorizados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TotalAutorizadosAsync(string DniAfi, string CodObra, string Matri, string pCoseguro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Hola", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> HolaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Garantias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> GarantiasAsync(string pMatricula, string pObra, string pDNI, string pElemento, string pCara, string pPractica, string pBarra, string pNombreAfi, string pUnico, string pCoseguro, string pUnicoCoseguro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Extraido", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ExtraidoAsync(string pDni, string pObra, string pElemento, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/lisnom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> lisnomAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ConsultaAutorizadosUnico", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> ConsultaAutorizadosUnicoAsync(string DniAfi, string CodObra, string pUnico, string pCoseguro, string pUnicoCoseguro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/CupoMensual", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CupoMensualAsync(string pDni, string pObra, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/CupoMensualPrueba", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CupoMensualPruebaAsync(string pDni, string pObra, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/CupoMensual2023", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CupoMensual2023Async(string pDni, string pObra, string pPractica, string pMatricula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/GarantiaPracticas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GarantiaPracticasAsync(string pDni, string pObra, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/GarantiaPrestador", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GarantiaPrestadorAsync(string pDni, string pObra, string pPractica, string pMatricula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/CupoMensualPracticasRelacionadas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CupoMensualPracticasRelacionadasAsync(string pDni, string pObra, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ValidaAfi", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidaAfiAsync(string pDni, string pObra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ValidaAfiNuevo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidaAfiNuevoAsync(string pDni, string pObra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Afiliados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AfiliadosAsync(string strDNI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ValidaAfiCoseguro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidaAfiCoseguroAsync(string pDni, string pObra, string pCoseguro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/VerActualizaciones", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> VerActualizacionesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/VerAct_prueba", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> VerAct_pruebaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Auditar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AuditarAsync(string pMatricula, string pObra, string pDNI, string pElemento, string pCara, string pPractica, string pBarra, string pNombreAfi, string pUnico, string pCoseguro, string pUnicoCoseguro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ConsultaNumeroAutorizacion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> ConsultaNumeroAutorizacionAsync(string Nauto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ValidaCara", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidaCaraAsync(string pObra, string pCodigo, string pElemento, string pCaras);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ValidaCaras", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> ValidaCarasAsync(string pObra, string pCodigo, string pElemento, string pCaras);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ValidaAfiliadopagina", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidaAfiliadopaginaAsync(string DniAfi, string DniTitular);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/BuscarDatosAfiliado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> BuscarDatosAfiliadoAsync(string DniAfi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ver_coseguro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ver_coseguroAsync(string DniAfi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/restricciones_atsa", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> restricciones_atsaAsync(string pCoseguro, string pObra, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Adrian", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> AdrianAsync(string DniAfi, string CodObra, string Matri, string pCoseguro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Trae_Nombre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Trae_NombreAsync(string pDni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Sinonimo_Plan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Sinonimo_PlanAsync(string pDni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Sinonimo_Sistema", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Sinonimo_SistemaAsync(string pDni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Anual", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AnualAsync(string pDni, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Mensual", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MensualAsync(string pDni, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Tipo_Nomenclador", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Tipo_NomencladorAsync(string pPlan, string pPractica, string pTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Tope_Mensual_Colmed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Tope_Mensual_ColmedAsync(string pDni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Tope", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TopeAsync(string pSistema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Tipo_Nomenclador_Carencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Tipo_Nomenclador_CarenciaAsync(string pPlan, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Valida_Fecha_Colmed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Valida_Fecha_ColmedAsync(string pDni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Valido_Carencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Valido_CarenciaAsync(string pDni, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Trae_Copago", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Trae_CopagoAsync(string pPlan, string pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Garantias_Colmed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> Garantias_ColmedAsync(string pMatricula, string pObra, string pDNI, string pElemento, string pCara, string pPractica, string pBarra, string pNombreAfi, string pUnico, string pCoseguro, string pUnicoCoseguro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Valida_Afiliado_Colmed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Valida_Afiliado_ColmedAsync(string pDni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Auditar_Colmed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Auditar_ColmedAsync(string pMatricula, string pObra, string pDNI, string pElemento, string pCara, string pPractica, string pBarra, string pNombreAfi, string pUnico, string pCoseguro, string pUnicoCoseguro, string pFV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/trae_valor_Sql", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> trae_valor_SqlAsync(string pTipo, int pPractica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/trae_numero_afiliado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> trae_numero_afiliadoAsync(string pDni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/trae_sistema_afiliado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> trae_sistema_afiliadoAsync(string pDni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/trae_plan_afiliado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> trae_plan_afiliadoAsync(string pDni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/ConsultaAutorizados_Colmed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> ConsultaAutorizados_ColmedAsync(string fec_desde, string fec_hasta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/Listado_CO_DOS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> Listado_CO_DOSAsync(string pDni, string fec_desde, string fec_hasta, string pTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ExcelenciaDigital.net/garantias_practicas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> garantias_practicasAsync(string pDni, string pPractica, string pDiente);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface ServiceSoapChannel : WsColOdont.ServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<WsColOdont.ServiceSoap>, WsColOdont.ServiceSoap
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), ServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> NomencladorAsync()
        {
            return base.Channel.NomencladorAsync();
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> ConsultaAutorizadosAsync(string DniAfi, string CodObra, string Matri, string pCoseguro)
        {
            return base.Channel.ConsultaAutorizadosAsync(DniAfi, CodObra, Matri, pCoseguro);
        }
        
        public System.Threading.Tasks.Task<string> TotalAutorizadosAsync(string DniAfi, string CodObra, string Matri, string pCoseguro)
        {
            return base.Channel.TotalAutorizadosAsync(DniAfi, CodObra, Matri, pCoseguro);
        }
        
        public System.Threading.Tasks.Task<string> HolaAsync()
        {
            return base.Channel.HolaAsync();
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> GarantiasAsync(string pMatricula, string pObra, string pDNI, string pElemento, string pCara, string pPractica, string pBarra, string pNombreAfi, string pUnico, string pCoseguro, string pUnicoCoseguro)
        {
            return base.Channel.GarantiasAsync(pMatricula, pObra, pDNI, pElemento, pCara, pPractica, pBarra, pNombreAfi, pUnico, pCoseguro, pUnicoCoseguro);
        }
        
        public System.Threading.Tasks.Task<string> ExtraidoAsync(string pDni, string pObra, string pElemento, string pPractica)
        {
            return base.Channel.ExtraidoAsync(pDni, pObra, pElemento, pPractica);
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> lisnomAsync()
        {
            return base.Channel.lisnomAsync();
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> ConsultaAutorizadosUnicoAsync(string DniAfi, string CodObra, string pUnico, string pCoseguro, string pUnicoCoseguro)
        {
            return base.Channel.ConsultaAutorizadosUnicoAsync(DniAfi, CodObra, pUnico, pCoseguro, pUnicoCoseguro);
        }
        
        public System.Threading.Tasks.Task<string> CupoMensualAsync(string pDni, string pObra, string pPractica)
        {
            return base.Channel.CupoMensualAsync(pDni, pObra, pPractica);
        }
        
        public System.Threading.Tasks.Task<string> CupoMensualPruebaAsync(string pDni, string pObra, string pPractica)
        {
            return base.Channel.CupoMensualPruebaAsync(pDni, pObra, pPractica);
        }
        
        public System.Threading.Tasks.Task<string> CupoMensual2023Async(string pDni, string pObra, string pPractica, string pMatricula)
        {
            return base.Channel.CupoMensual2023Async(pDni, pObra, pPractica, pMatricula);
        }
        
        public System.Threading.Tasks.Task<string> GarantiaPracticasAsync(string pDni, string pObra, string pPractica)
        {
            return base.Channel.GarantiaPracticasAsync(pDni, pObra, pPractica);
        }
        
        public System.Threading.Tasks.Task<string> GarantiaPrestadorAsync(string pDni, string pObra, string pPractica, string pMatricula)
        {
            return base.Channel.GarantiaPrestadorAsync(pDni, pObra, pPractica, pMatricula);
        }
        
        public System.Threading.Tasks.Task<string> CupoMensualPracticasRelacionadasAsync(string pDni, string pObra, string pPractica)
        {
            return base.Channel.CupoMensualPracticasRelacionadasAsync(pDni, pObra, pPractica);
        }
        
        public System.Threading.Tasks.Task<string> ValidaAfiAsync(string pDni, string pObra)
        {
            return base.Channel.ValidaAfiAsync(pDni, pObra);
        }
        
        public System.Threading.Tasks.Task<string> ValidaAfiNuevoAsync(string pDni, string pObra)
        {
            return base.Channel.ValidaAfiNuevoAsync(pDni, pObra);
        }
        
        public System.Threading.Tasks.Task<string> AfiliadosAsync(string strDNI)
        {
            return base.Channel.AfiliadosAsync(strDNI);
        }
        
        public System.Threading.Tasks.Task<string> ValidaAfiCoseguroAsync(string pDni, string pObra, string pCoseguro)
        {
            return base.Channel.ValidaAfiCoseguroAsync(pDni, pObra, pCoseguro);
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> VerActualizacionesAsync()
        {
            return base.Channel.VerActualizacionesAsync();
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> VerAct_pruebaAsync()
        {
            return base.Channel.VerAct_pruebaAsync();
        }
        
        public System.Threading.Tasks.Task<string> AuditarAsync(string pMatricula, string pObra, string pDNI, string pElemento, string pCara, string pPractica, string pBarra, string pNombreAfi, string pUnico, string pCoseguro, string pUnicoCoseguro)
        {
            return base.Channel.AuditarAsync(pMatricula, pObra, pDNI, pElemento, pCara, pPractica, pBarra, pNombreAfi, pUnico, pCoseguro, pUnicoCoseguro);
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> ConsultaNumeroAutorizacionAsync(string Nauto)
        {
            return base.Channel.ConsultaNumeroAutorizacionAsync(Nauto);
        }
        
        public System.Threading.Tasks.Task<string> ValidaCaraAsync(string pObra, string pCodigo, string pElemento, string pCaras)
        {
            return base.Channel.ValidaCaraAsync(pObra, pCodigo, pElemento, pCaras);
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> ValidaCarasAsync(string pObra, string pCodigo, string pElemento, string pCaras)
        {
            return base.Channel.ValidaCarasAsync(pObra, pCodigo, pElemento, pCaras);
        }
        
        public System.Threading.Tasks.Task<string> ValidaAfiliadopaginaAsync(string DniAfi, string DniTitular)
        {
            return base.Channel.ValidaAfiliadopaginaAsync(DniAfi, DniTitular);
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> BuscarDatosAfiliadoAsync(string DniAfi)
        {
            return base.Channel.BuscarDatosAfiliadoAsync(DniAfi);
        }
        
        public System.Threading.Tasks.Task<string> ver_coseguroAsync(string DniAfi)
        {
            return base.Channel.ver_coseguroAsync(DniAfi);
        }
        
        public System.Threading.Tasks.Task<string> restricciones_atsaAsync(string pCoseguro, string pObra, string pPractica)
        {
            return base.Channel.restricciones_atsaAsync(pCoseguro, pObra, pPractica);
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> AdrianAsync(string DniAfi, string CodObra, string Matri, string pCoseguro)
        {
            return base.Channel.AdrianAsync(DniAfi, CodObra, Matri, pCoseguro);
        }
        
        public System.Threading.Tasks.Task<string> Trae_NombreAsync(string pDni)
        {
            return base.Channel.Trae_NombreAsync(pDni);
        }
        
        public System.Threading.Tasks.Task<string> Sinonimo_PlanAsync(string pDni)
        {
            return base.Channel.Sinonimo_PlanAsync(pDni);
        }
        
        public System.Threading.Tasks.Task<string> Sinonimo_SistemaAsync(string pDni)
        {
            return base.Channel.Sinonimo_SistemaAsync(pDni);
        }
        
        public System.Threading.Tasks.Task<string> AnualAsync(string pDni, string pPractica)
        {
            return base.Channel.AnualAsync(pDni, pPractica);
        }
        
        public System.Threading.Tasks.Task<string> MensualAsync(string pDni, string pPractica)
        {
            return base.Channel.MensualAsync(pDni, pPractica);
        }
        
        public System.Threading.Tasks.Task<string> Tipo_NomencladorAsync(string pPlan, string pPractica, string pTipo)
        {
            return base.Channel.Tipo_NomencladorAsync(pPlan, pPractica, pTipo);
        }
        
        public System.Threading.Tasks.Task<string> Tope_Mensual_ColmedAsync(string pDni)
        {
            return base.Channel.Tope_Mensual_ColmedAsync(pDni);
        }
        
        public System.Threading.Tasks.Task<string> TopeAsync(string pSistema)
        {
            return base.Channel.TopeAsync(pSistema);
        }
        
        public System.Threading.Tasks.Task<string> Tipo_Nomenclador_CarenciaAsync(string pPlan, string pPractica)
        {
            return base.Channel.Tipo_Nomenclador_CarenciaAsync(pPlan, pPractica);
        }
        
        public System.Threading.Tasks.Task<string> Valida_Fecha_ColmedAsync(string pDni)
        {
            return base.Channel.Valida_Fecha_ColmedAsync(pDni);
        }
        
        public System.Threading.Tasks.Task<string> Valido_CarenciaAsync(string pDni, string pPractica)
        {
            return base.Channel.Valido_CarenciaAsync(pDni, pPractica);
        }
        
        public System.Threading.Tasks.Task<string> Trae_CopagoAsync(string pPlan, string pPractica)
        {
            return base.Channel.Trae_CopagoAsync(pPlan, pPractica);
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> Garantias_ColmedAsync(string pMatricula, string pObra, string pDNI, string pElemento, string pCara, string pPractica, string pBarra, string pNombreAfi, string pUnico, string pCoseguro, string pUnicoCoseguro)
        {
            return base.Channel.Garantias_ColmedAsync(pMatricula, pObra, pDNI, pElemento, pCara, pPractica, pBarra, pNombreAfi, pUnico, pCoseguro, pUnicoCoseguro);
        }
        
        public System.Threading.Tasks.Task<string> Valida_Afiliado_ColmedAsync(string pDni)
        {
            return base.Channel.Valida_Afiliado_ColmedAsync(pDni);
        }
        
        public System.Threading.Tasks.Task<string> Auditar_ColmedAsync(string pMatricula, string pObra, string pDNI, string pElemento, string pCara, string pPractica, string pBarra, string pNombreAfi, string pUnico, string pCoseguro, string pUnicoCoseguro, string pFV)
        {
            return base.Channel.Auditar_ColmedAsync(pMatricula, pObra, pDNI, pElemento, pCara, pPractica, pBarra, pNombreAfi, pUnico, pCoseguro, pUnicoCoseguro, pFV);
        }
        
        public System.Threading.Tasks.Task<string> trae_valor_SqlAsync(string pTipo, int pPractica)
        {
            return base.Channel.trae_valor_SqlAsync(pTipo, pPractica);
        }
        
        public System.Threading.Tasks.Task<string> trae_numero_afiliadoAsync(string pDni)
        {
            return base.Channel.trae_numero_afiliadoAsync(pDni);
        }
        
        public System.Threading.Tasks.Task<string> trae_sistema_afiliadoAsync(string pDni)
        {
            return base.Channel.trae_sistema_afiliadoAsync(pDni);
        }
        
        public System.Threading.Tasks.Task<string> trae_plan_afiliadoAsync(string pDni)
        {
            return base.Channel.trae_plan_afiliadoAsync(pDni);
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> ConsultaAutorizados_ColmedAsync(string fec_desde, string fec_hasta)
        {
            return base.Channel.ConsultaAutorizados_ColmedAsync(fec_desde, fec_hasta);
        }
        
        public System.Threading.Tasks.Task<WsColOdont.ArrayOfXElement> Listado_CO_DOSAsync(string pDni, string fec_desde, string fec_hasta, string pTipo)
        {
            return base.Channel.Listado_CO_DOSAsync(pDni, fec_desde, fec_hasta, pTipo);
        }
        
        public System.Threading.Tasks.Task<string> garantias_practicasAsync(string pDni, string pPractica, string pDiente)
        {
            return base.Channel.garantias_practicasAsync(pDni, pPractica, pDiente);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://excelencia.myqnapcloud.com:3002/WsColOdon/service.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://excelencia.myqnapcloud.com:3002/WsColOdon/service.asmx");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ServiceSoap,
            
            ServiceSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.2.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
